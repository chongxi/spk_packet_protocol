// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "spk_packet_rx.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic spk_packet_rx::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic spk_packet_rx::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> spk_packet_rx::ap_ST_st1_fsm_0 = "1";
const sc_lv<13> spk_packet_rx::ap_ST_st2_fsm_1 = "10";
const sc_lv<13> spk_packet_rx::ap_ST_st3_fsm_2 = "100";
const sc_lv<13> spk_packet_rx::ap_ST_st4_fsm_3 = "1000";
const sc_lv<13> spk_packet_rx::ap_ST_st5_fsm_4 = "10000";
const sc_lv<13> spk_packet_rx::ap_ST_st6_fsm_5 = "100000";
const sc_lv<13> spk_packet_rx::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<13> spk_packet_rx::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<13> spk_packet_rx::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<13> spk_packet_rx::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<13> spk_packet_rx::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<13> spk_packet_rx::ap_ST_pp0_stg0_fsm_11 = "100000000000";
const sc_lv<13> spk_packet_rx::ap_ST_st14_fsm_12 = "1000000000000";
const sc_lv<32> spk_packet_rx::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> spk_packet_rx::ap_const_lv1_1 = "1";
const bool spk_packet_rx::ap_true = true;
const sc_lv<32> spk_packet_rx::ap_const_lv32_1 = "1";
const sc_lv<1> spk_packet_rx::ap_const_lv1_0 = "0";
const sc_lv<32> spk_packet_rx::ap_const_lv32_6 = "110";
const sc_lv<32> spk_packet_rx::ap_const_lv32_A = "1010";
const sc_lv<32> spk_packet_rx::ap_const_lv32_B = "1011";
const sc_lv<32> spk_packet_rx::ap_const_lv32_2 = "10";
const sc_lv<32> spk_packet_rx::ap_const_lv32_4 = "100";
const sc_lv<32> spk_packet_rx::ap_const_lv32_7 = "111";
const sc_lv<32> spk_packet_rx::ap_const_lv32_9 = "1001";
const sc_lv<5> spk_packet_rx::ap_const_lv5_0 = "00000";
const sc_lv<32> spk_packet_rx::ap_const_lv32_5 = "101";
const sc_lv<11> spk_packet_rx::ap_const_lv11_13 = "10011";
const sc_lv<5> spk_packet_rx::ap_const_lv5_1 = "1";
const sc_lv<5> spk_packet_rx::ap_const_lv5_12 = "10010";
const sc_lv<32> spk_packet_rx::ap_const_lv32_C = "1100";

spk_packet_rx::spk_packet_rx(sc_module_name name) : sc_module(name), mVcdFile(0) {
    spk_V_U = new spk_packet_rx_spk_V("spk_V_U");
    spk_V_U->clk(ap_clk);
    spk_V_U->reset(ap_rst_n_inv);
    spk_V_U->address0(spk_V_address0);
    spk_V_U->ce0(spk_V_ce0);
    spk_V_U->we0(spk_V_we0);
    spk_V_U->d0(spk_V_d0);
    spk_V_U->q0(spk_V_q0);
    spk_packet_rx_mul_6ns_6ns_11_3_U1 = new spk_packet_rx_mul_6ns_6ns_11_3<1,3,6,6,11>("spk_packet_rx_mul_6ns_6ns_11_3_U1");
    spk_packet_rx_mul_6ns_6ns_11_3_U1->clk(ap_clk);
    spk_packet_rx_mul_6ns_6ns_11_3_U1->reset(ap_rst_n_inv);
    spk_packet_rx_mul_6ns_6ns_11_3_U1->din0(grp_fu_220_p0);
    spk_packet_rx_mul_6ns_6ns_11_3_U1->din1(grp_fu_220_p1);
    spk_packet_rx_mul_6ns_6ns_11_3_U1->ce(ap_var_for_const0);
    spk_packet_rx_mul_6ns_6ns_11_3_U1->dout(grp_fu_220_p2);
    spk_packet_rx_mac_muladd_6ns_6ns_5ns_11_3_U2 = new spk_packet_rx_mac_muladd_6ns_6ns_5ns_11_3<1,3,6,6,5,11>("spk_packet_rx_mac_muladd_6ns_6ns_5ns_11_3_U2");
    spk_packet_rx_mac_muladd_6ns_6ns_5ns_11_3_U2->clk(ap_clk);
    spk_packet_rx_mac_muladd_6ns_6ns_5ns_11_3_U2->reset(ap_rst_n_inv);
    spk_packet_rx_mac_muladd_6ns_6ns_5ns_11_3_U2->din0(grp_fu_281_p0);
    spk_packet_rx_mac_muladd_6ns_6ns_5ns_11_3_U2->din1(grp_fu_281_p1);
    spk_packet_rx_mac_muladd_6ns_6ns_5ns_11_3_U2->din2(grp_fu_281_p2);
    spk_packet_rx_mac_muladd_6ns_6ns_5ns_11_3_U2->ce(ap_var_for_const0);
    spk_packet_rx_mac_muladd_6ns_6ns_5ns_11_3_U2->dout(grp_fu_281_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st14_fsm_12 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st14_fsm_12 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_353);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_366);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_378);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_390);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_402);
    sensitive << ( pre_in_V_user_V_0_vld_out );
    sensitive << ( grp_nbreadreq_fu_78_p6 );

    SC_METHOD(thread_ap_sig_423);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_436);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_441);
    sensitive << ( post_in_V_user_V_0_vld_out );
    sensitive << ( grp_nbreadreq_fu_104_p6 );

    SC_METHOD(thread_ap_sig_462);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_473);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_478);
    sensitive << ( time_stamp_V_0_vld_out );
    sensitive << ( empty_2_reg_324_1 );

    SC_METHOD(thread_ap_sig_513);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_628);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_11);
    sensitive << ( ap_sig_390 );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_473 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_378 );

    SC_METHOD(thread_ap_sig_cseq_ST_st14_fsm_12);
    sensitive << ( ap_sig_628 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_30 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_353 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_423 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_436 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_513 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_366 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_462 );

    SC_METHOD(thread_ap_sig_ioackin_spk_out_stream_TREADY);
    sensitive << ( spk_out_stream_TREADY );
    sensitive << ( ap_reg_ioackin_spk_out_stream_TREADY );

    SC_METHOD(thread_exitcond_fu_270_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_ioackin_spk_out_stream_TREADY );
    sensitive << ( val_assign1_phi_fu_185_p4 );

    SC_METHOD(thread_grp_fu_220_p0);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( grp_fu_220_p00 );

    SC_METHOD(thread_grp_fu_220_p00);
    sensitive << ( empty_2_reg_324_2 );

    SC_METHOD(thread_grp_fu_220_p1);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_grp_fu_281_p0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( grp_fu_281_p00 );

    SC_METHOD(thread_grp_fu_281_p00);
    sensitive << ( empty_reg_293_2 );

    SC_METHOD(thread_grp_fu_281_p1);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_grp_fu_281_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( grp_fu_281_p20 );

    SC_METHOD(thread_grp_fu_281_p20);
    sensitive << ( tmp_user_V_reg_300 );

    SC_METHOD(thread_grp_nbreadreq_fu_104_p6);
    sensitive << ( post_in_V_user_V_0_vld_out );
    sensitive << ( post_in_V_last_0_vld_out );
    sensitive << ( post_in_V_id_V_0_vld_out );
    sensitive << ( post_in_V_data_V_0_vld_out );

    SC_METHOD(thread_grp_nbreadreq_fu_78_p6);
    sensitive << ( pre_in_V_user_V_0_vld_out );
    sensitive << ( pre_in_V_last_0_vld_out );
    sensitive << ( pre_in_V_id_V_0_vld_out );
    sensitive << ( pre_in_V_data_V_0_vld_out );

    SC_METHOD(thread_j_fu_264_p2);
    sensitive << ( val_assign1_phi_fu_185_p4 );

    SC_METHOD(thread_post_in_TDATA_blk_n);
    sensitive << ( post_in_V_data_V_0_vld_out );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( grp_nbreadreq_fu_104_p6 );

    SC_METHOD(thread_post_in_TREADY);
    sensitive << ( post_in_V_data_V_0_in_rdy );

    SC_METHOD(thread_post_in_V_data_V_0_ack_out);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( grp_nbreadreq_fu_104_p6 );
    sensitive << ( ap_sig_441 );

    SC_METHOD(thread_post_in_V_data_V_0_data_out);
    sensitive << ( post_in_TDATA );
    sensitive << ( post_in_V_data_V_0_data_reg );
    sensitive << ( post_in_V_data_V_0_has_vld_data_reg );

    SC_METHOD(thread_post_in_V_data_V_0_has_vld_data_reg_i);
    sensitive << ( post_in_V_data_V_0_vld_in );
    sensitive << ( post_in_V_data_V_0_ack_out );
    sensitive << ( post_in_V_data_V_0_in_rdy );
    sensitive << ( post_in_V_data_V_0_has_vld_data_reg );

    SC_METHOD(thread_post_in_V_data_V_0_vld_in);
    sensitive << ( post_in_TVALID );

    SC_METHOD(thread_post_in_V_data_V_0_vld_out);
    sensitive << ( post_in_TVALID );
    sensitive << ( post_in_V_data_V_0_areset_d );
    sensitive << ( post_in_V_data_V_0_has_vld_data_reg );

    SC_METHOD(thread_post_in_V_id_V_0_ack_out);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( grp_nbreadreq_fu_104_p6 );
    sensitive << ( ap_sig_441 );

    SC_METHOD(thread_post_in_V_id_V_0_data_out);
    sensitive << ( post_in_TID );
    sensitive << ( post_in_V_id_V_0_data_reg );
    sensitive << ( post_in_V_id_V_0_has_vld_data_reg );

    SC_METHOD(thread_post_in_V_id_V_0_has_vld_data_reg_i);
    sensitive << ( post_in_V_id_V_0_vld_in );
    sensitive << ( post_in_V_id_V_0_ack_out );
    sensitive << ( post_in_V_id_V_0_in_rdy );
    sensitive << ( post_in_V_id_V_0_has_vld_data_reg );

    SC_METHOD(thread_post_in_V_id_V_0_vld_in);
    sensitive << ( post_in_TVALID );

    SC_METHOD(thread_post_in_V_id_V_0_vld_out);
    sensitive << ( post_in_TVALID );
    sensitive << ( post_in_V_id_V_0_areset_d );
    sensitive << ( post_in_V_id_V_0_has_vld_data_reg );

    SC_METHOD(thread_post_in_V_last_0_ack_out);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( grp_nbreadreq_fu_104_p6 );
    sensitive << ( ap_sig_441 );

    SC_METHOD(thread_post_in_V_last_0_data_out);
    sensitive << ( post_in_TLAST );
    sensitive << ( post_in_V_last_0_data_reg );
    sensitive << ( post_in_V_last_0_has_vld_data_reg );

    SC_METHOD(thread_post_in_V_last_0_has_vld_data_reg_i);
    sensitive << ( post_in_V_last_0_vld_in );
    sensitive << ( post_in_V_last_0_ack_out );
    sensitive << ( post_in_V_last_0_in_rdy );
    sensitive << ( post_in_V_last_0_has_vld_data_reg );

    SC_METHOD(thread_post_in_V_last_0_vld_in);
    sensitive << ( post_in_TVALID );

    SC_METHOD(thread_post_in_V_last_0_vld_out);
    sensitive << ( post_in_TVALID );
    sensitive << ( post_in_V_last_0_areset_d );
    sensitive << ( post_in_V_last_0_has_vld_data_reg );

    SC_METHOD(thread_post_in_V_user_V_0_ack_out);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( grp_nbreadreq_fu_104_p6 );
    sensitive << ( ap_sig_441 );

    SC_METHOD(thread_post_in_V_user_V_0_data_out);
    sensitive << ( post_in_TUSER );
    sensitive << ( post_in_V_user_V_0_data_reg );
    sensitive << ( post_in_V_user_V_0_has_vld_data_reg );

    SC_METHOD(thread_post_in_V_user_V_0_has_vld_data_reg_i);
    sensitive << ( post_in_V_user_V_0_vld_in );
    sensitive << ( post_in_V_user_V_0_ack_out );
    sensitive << ( post_in_V_user_V_0_in_rdy );
    sensitive << ( post_in_V_user_V_0_has_vld_data_reg );

    SC_METHOD(thread_post_in_V_user_V_0_vld_in);
    sensitive << ( post_in_TVALID );

    SC_METHOD(thread_post_in_V_user_V_0_vld_out);
    sensitive << ( post_in_TVALID );
    sensitive << ( post_in_V_user_V_0_areset_d );
    sensitive << ( post_in_V_user_V_0_has_vld_data_reg );

    SC_METHOD(thread_pre_in_TDATA_blk_n);
    sensitive << ( pre_in_V_data_V_0_vld_out );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( grp_nbreadreq_fu_78_p6 );

    SC_METHOD(thread_pre_in_TREADY);
    sensitive << ( pre_in_V_data_V_0_in_rdy );

    SC_METHOD(thread_pre_in_V_data_V_0_ack_out);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( grp_nbreadreq_fu_78_p6 );
    sensitive << ( ap_sig_402 );

    SC_METHOD(thread_pre_in_V_data_V_0_data_out);
    sensitive << ( pre_in_TDATA );
    sensitive << ( pre_in_V_data_V_0_data_reg );
    sensitive << ( pre_in_V_data_V_0_has_vld_data_reg );

    SC_METHOD(thread_pre_in_V_data_V_0_has_vld_data_reg_i);
    sensitive << ( pre_in_V_data_V_0_vld_in );
    sensitive << ( pre_in_V_data_V_0_ack_out );
    sensitive << ( pre_in_V_data_V_0_in_rdy );
    sensitive << ( pre_in_V_data_V_0_has_vld_data_reg );

    SC_METHOD(thread_pre_in_V_data_V_0_vld_in);
    sensitive << ( pre_in_TVALID );

    SC_METHOD(thread_pre_in_V_data_V_0_vld_out);
    sensitive << ( pre_in_TVALID );
    sensitive << ( pre_in_V_data_V_0_areset_d );
    sensitive << ( pre_in_V_data_V_0_has_vld_data_reg );

    SC_METHOD(thread_pre_in_V_id_V_0_ack_out);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( grp_nbreadreq_fu_78_p6 );
    sensitive << ( ap_sig_402 );

    SC_METHOD(thread_pre_in_V_id_V_0_data_out);
    sensitive << ( pre_in_TID );
    sensitive << ( pre_in_V_id_V_0_data_reg );
    sensitive << ( pre_in_V_id_V_0_has_vld_data_reg );

    SC_METHOD(thread_pre_in_V_id_V_0_has_vld_data_reg_i);
    sensitive << ( pre_in_V_id_V_0_vld_in );
    sensitive << ( pre_in_V_id_V_0_ack_out );
    sensitive << ( pre_in_V_id_V_0_in_rdy );
    sensitive << ( pre_in_V_id_V_0_has_vld_data_reg );

    SC_METHOD(thread_pre_in_V_id_V_0_vld_in);
    sensitive << ( pre_in_TVALID );

    SC_METHOD(thread_pre_in_V_id_V_0_vld_out);
    sensitive << ( pre_in_TVALID );
    sensitive << ( pre_in_V_id_V_0_areset_d );
    sensitive << ( pre_in_V_id_V_0_has_vld_data_reg );

    SC_METHOD(thread_pre_in_V_last_0_ack_out);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( grp_nbreadreq_fu_78_p6 );
    sensitive << ( ap_sig_402 );

    SC_METHOD(thread_pre_in_V_last_0_has_vld_data_reg_i);
    sensitive << ( pre_in_V_last_0_vld_in );
    sensitive << ( pre_in_V_last_0_ack_out );
    sensitive << ( pre_in_V_last_0_in_rdy );
    sensitive << ( pre_in_V_last_0_has_vld_data_reg );

    SC_METHOD(thread_pre_in_V_last_0_vld_in);
    sensitive << ( pre_in_TVALID );

    SC_METHOD(thread_pre_in_V_last_0_vld_out);
    sensitive << ( pre_in_TVALID );
    sensitive << ( pre_in_V_last_0_areset_d );
    sensitive << ( pre_in_V_last_0_has_vld_data_reg );

    SC_METHOD(thread_pre_in_V_user_V_0_ack_out);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( grp_nbreadreq_fu_78_p6 );
    sensitive << ( ap_sig_402 );

    SC_METHOD(thread_pre_in_V_user_V_0_data_out);
    sensitive << ( pre_in_TUSER );
    sensitive << ( pre_in_V_user_V_0_data_reg );
    sensitive << ( pre_in_V_user_V_0_has_vld_data_reg );

    SC_METHOD(thread_pre_in_V_user_V_0_has_vld_data_reg_i);
    sensitive << ( pre_in_V_user_V_0_vld_in );
    sensitive << ( pre_in_V_user_V_0_ack_out );
    sensitive << ( pre_in_V_user_V_0_in_rdy );
    sensitive << ( pre_in_V_user_V_0_has_vld_data_reg );

    SC_METHOD(thread_pre_in_V_user_V_0_vld_in);
    sensitive << ( pre_in_TVALID );

    SC_METHOD(thread_pre_in_V_user_V_0_vld_out);
    sensitive << ( pre_in_TVALID );
    sensitive << ( pre_in_V_user_V_0_areset_d );
    sensitive << ( pre_in_V_user_V_0_has_vld_data_reg );

    SC_METHOD(thread_spk_V_address0);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_10_cast_fu_209_p1 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_12_cast_fu_245_p1 );
    sensitive << ( tmp_13_cast_fu_259_p1 );

    SC_METHOD(thread_spk_V_ce0);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_478 );
    sensitive << ( ap_sig_ioackin_spk_out_stream_TREADY );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_spk_V_d0);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( tmp_data_V_reg_305 );
    sensitive << ( empty_2_reg_324_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_spk_V_we0);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( tmp_reg_289 );
    sensitive << ( ap_sig_478 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_spk_out_stream_TDATA);
    sensitive << ( spk_V_q0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_spk_out_stream_TDATA_blk_n);
    sensitive << ( spk_out_stream_TREADY );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_spk_out_stream_TDEST);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( val_assign1_reg_181 );

    SC_METHOD(thread_spk_out_stream_TID);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_id_V_reg_332 );

    SC_METHOD(thread_spk_out_stream_TUSER);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_6_reg_352 );

    SC_METHOD(thread_spk_out_stream_TVALID);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ioackin_spk_out_stream_TREADY );

    SC_METHOD(thread_time_stamp_V_0_ack_out);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( empty_2_reg_324_1 );
    sensitive << ( ap_sig_478 );

    SC_METHOD(thread_time_stamp_V_0_data_out);
    sensitive << ( time_stamp_V_TDATA );
    sensitive << ( time_stamp_V_0_data_reg );
    sensitive << ( time_stamp_V_0_has_vld_data_reg );

    SC_METHOD(thread_time_stamp_V_0_has_vld_data_reg_i);
    sensitive << ( time_stamp_V_0_vld_in );
    sensitive << ( time_stamp_V_0_ack_out );
    sensitive << ( time_stamp_V_0_in_rdy );
    sensitive << ( time_stamp_V_0_has_vld_data_reg );

    SC_METHOD(thread_time_stamp_V_0_vld_in);
    sensitive << ( time_stamp_V_TVALID );

    SC_METHOD(thread_time_stamp_V_0_vld_out);
    sensitive << ( time_stamp_V_TVALID );
    sensitive << ( time_stamp_V_0_areset_d );
    sensitive << ( time_stamp_V_0_has_vld_data_reg );

    SC_METHOD(thread_time_stamp_V_TDATA_blk_n);
    sensitive << ( time_stamp_V_0_vld_out );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( empty_2_reg_324_1 );

    SC_METHOD(thread_time_stamp_V_TREADY);
    sensitive << ( time_stamp_V_0_in_rdy );

    SC_METHOD(thread_tmp_10_cast_fu_209_p1);
    sensitive << ( tmp_s_reg_315 );

    SC_METHOD(thread_tmp_12_cast_fu_245_p1);
    sensitive << ( tmp_3_fu_240_p2 );

    SC_METHOD(thread_tmp_13_cast_fu_259_p1);
    sensitive << ( tmp_4_fu_254_p2 );

    SC_METHOD(thread_tmp_3_fu_240_p2);
    sensitive << ( tmp_2_reg_342 );
    sensitive << ( tmp_6_cast_fu_236_p1 );

    SC_METHOD(thread_tmp_4_fu_254_p2);
    sensitive << ( tmp_2_reg_342 );
    sensitive << ( tmp_9_cast_fu_250_p1 );

    SC_METHOD(thread_tmp_6_cast_fu_236_p1);
    sensitive << ( empty_2_reg_324_0 );

    SC_METHOD(thread_tmp_9_cast_fu_250_p1);
    sensitive << ( val_assign1_phi_fu_185_p4 );

    SC_METHOD(thread_val_assign1_phi_fu_185_p4);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( val_assign1_reg_181 );
    sensitive << ( j_reg_362 );
    sensitive << ( exitcond_reg_367 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nbreadreq_fu_78_p6 );
    sensitive << ( grp_nbreadreq_fu_104_p6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_402 );
    sensitive << ( ap_sig_441 );
    sensitive << ( empty_2_reg_324_1 );
    sensitive << ( ap_sig_478 );
    sensitive << ( ap_sig_ioackin_spk_out_stream_TREADY );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000001";
    pre_in_V_user_V_0_in_rdy = SC_LOGIC_0;
    pre_in_V_user_V_0_has_vld_data_reg = SC_LOGIC_0;
    pre_in_V_last_0_in_rdy = SC_LOGIC_0;
    pre_in_V_last_0_has_vld_data_reg = SC_LOGIC_0;
    pre_in_V_id_V_0_in_rdy = SC_LOGIC_0;
    pre_in_V_id_V_0_has_vld_data_reg = SC_LOGIC_0;
    pre_in_V_data_V_0_in_rdy = SC_LOGIC_0;
    pre_in_V_data_V_0_has_vld_data_reg = SC_LOGIC_0;
    post_in_V_user_V_0_in_rdy = SC_LOGIC_0;
    post_in_V_user_V_0_has_vld_data_reg = SC_LOGIC_0;
    post_in_V_last_0_in_rdy = SC_LOGIC_0;
    post_in_V_last_0_has_vld_data_reg = SC_LOGIC_0;
    post_in_V_id_V_0_in_rdy = SC_LOGIC_0;
    post_in_V_id_V_0_has_vld_data_reg = SC_LOGIC_0;
    post_in_V_data_V_0_in_rdy = SC_LOGIC_0;
    post_in_V_data_V_0_has_vld_data_reg = SC_LOGIC_0;
    time_stamp_V_0_in_rdy = SC_LOGIC_0;
    time_stamp_V_0_has_vld_data_reg = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ioackin_spk_out_stream_TREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "spk_packet_rx_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, pre_in_TUSER, "(port)pre_in_TUSER");
    sc_trace(mVcdFile, pre_in_TVALID, "(port)pre_in_TVALID");
    sc_trace(mVcdFile, pre_in_TREADY, "(port)pre_in_TREADY");
    sc_trace(mVcdFile, pre_in_TLAST, "(port)pre_in_TLAST");
    sc_trace(mVcdFile, pre_in_TID, "(port)pre_in_TID");
    sc_trace(mVcdFile, pre_in_TDATA, "(port)pre_in_TDATA");
    sc_trace(mVcdFile, post_in_TUSER, "(port)post_in_TUSER");
    sc_trace(mVcdFile, post_in_TVALID, "(port)post_in_TVALID");
    sc_trace(mVcdFile, post_in_TREADY, "(port)post_in_TREADY");
    sc_trace(mVcdFile, post_in_TLAST, "(port)post_in_TLAST");
    sc_trace(mVcdFile, post_in_TID, "(port)post_in_TID");
    sc_trace(mVcdFile, post_in_TDATA, "(port)post_in_TDATA");
    sc_trace(mVcdFile, time_stamp_V_TDATA, "(port)time_stamp_V_TDATA");
    sc_trace(mVcdFile, time_stamp_V_TVALID, "(port)time_stamp_V_TVALID");
    sc_trace(mVcdFile, time_stamp_V_TREADY, "(port)time_stamp_V_TREADY");
    sc_trace(mVcdFile, spk_out_stream_TID, "(port)spk_out_stream_TID");
    sc_trace(mVcdFile, spk_out_stream_TVALID, "(port)spk_out_stream_TVALID");
    sc_trace(mVcdFile, spk_out_stream_TREADY, "(port)spk_out_stream_TREADY");
    sc_trace(mVcdFile, spk_out_stream_TUSER, "(port)spk_out_stream_TUSER");
    sc_trace(mVcdFile, spk_out_stream_TDATA, "(port)spk_out_stream_TDATA");
    sc_trace(mVcdFile, spk_out_stream_TDEST, "(port)spk_out_stream_TDEST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_30, "ap_sig_30");
    sc_trace(mVcdFile, pre_in_V_user_V_0_data_out, "pre_in_V_user_V_0_data_out");
    sc_trace(mVcdFile, pre_in_V_user_V_0_vld_in, "pre_in_V_user_V_0_vld_in");
    sc_trace(mVcdFile, pre_in_V_user_V_0_vld_out, "pre_in_V_user_V_0_vld_out");
    sc_trace(mVcdFile, pre_in_V_user_V_0_ack_out, "pre_in_V_user_V_0_ack_out");
    sc_trace(mVcdFile, pre_in_V_user_V_0_data_reg, "pre_in_V_user_V_0_data_reg");
    sc_trace(mVcdFile, pre_in_V_user_V_0_areset_d, "pre_in_V_user_V_0_areset_d");
    sc_trace(mVcdFile, pre_in_V_user_V_0_in_rdy, "pre_in_V_user_V_0_in_rdy");
    sc_trace(mVcdFile, pre_in_V_user_V_0_has_vld_data_reg_i, "pre_in_V_user_V_0_has_vld_data_reg_i");
    sc_trace(mVcdFile, pre_in_V_user_V_0_has_vld_data_reg, "pre_in_V_user_V_0_has_vld_data_reg");
    sc_trace(mVcdFile, pre_in_V_last_0_vld_in, "pre_in_V_last_0_vld_in");
    sc_trace(mVcdFile, pre_in_V_last_0_vld_out, "pre_in_V_last_0_vld_out");
    sc_trace(mVcdFile, pre_in_V_last_0_ack_out, "pre_in_V_last_0_ack_out");
    sc_trace(mVcdFile, pre_in_V_last_0_areset_d, "pre_in_V_last_0_areset_d");
    sc_trace(mVcdFile, pre_in_V_last_0_in_rdy, "pre_in_V_last_0_in_rdy");
    sc_trace(mVcdFile, pre_in_V_last_0_has_vld_data_reg_i, "pre_in_V_last_0_has_vld_data_reg_i");
    sc_trace(mVcdFile, pre_in_V_last_0_has_vld_data_reg, "pre_in_V_last_0_has_vld_data_reg");
    sc_trace(mVcdFile, pre_in_V_id_V_0_data_out, "pre_in_V_id_V_0_data_out");
    sc_trace(mVcdFile, pre_in_V_id_V_0_vld_in, "pre_in_V_id_V_0_vld_in");
    sc_trace(mVcdFile, pre_in_V_id_V_0_vld_out, "pre_in_V_id_V_0_vld_out");
    sc_trace(mVcdFile, pre_in_V_id_V_0_ack_out, "pre_in_V_id_V_0_ack_out");
    sc_trace(mVcdFile, pre_in_V_id_V_0_data_reg, "pre_in_V_id_V_0_data_reg");
    sc_trace(mVcdFile, pre_in_V_id_V_0_areset_d, "pre_in_V_id_V_0_areset_d");
    sc_trace(mVcdFile, pre_in_V_id_V_0_in_rdy, "pre_in_V_id_V_0_in_rdy");
    sc_trace(mVcdFile, pre_in_V_id_V_0_has_vld_data_reg_i, "pre_in_V_id_V_0_has_vld_data_reg_i");
    sc_trace(mVcdFile, pre_in_V_id_V_0_has_vld_data_reg, "pre_in_V_id_V_0_has_vld_data_reg");
    sc_trace(mVcdFile, pre_in_V_data_V_0_data_out, "pre_in_V_data_V_0_data_out");
    sc_trace(mVcdFile, pre_in_V_data_V_0_vld_in, "pre_in_V_data_V_0_vld_in");
    sc_trace(mVcdFile, pre_in_V_data_V_0_vld_out, "pre_in_V_data_V_0_vld_out");
    sc_trace(mVcdFile, pre_in_V_data_V_0_ack_out, "pre_in_V_data_V_0_ack_out");
    sc_trace(mVcdFile, pre_in_V_data_V_0_data_reg, "pre_in_V_data_V_0_data_reg");
    sc_trace(mVcdFile, pre_in_V_data_V_0_areset_d, "pre_in_V_data_V_0_areset_d");
    sc_trace(mVcdFile, pre_in_V_data_V_0_in_rdy, "pre_in_V_data_V_0_in_rdy");
    sc_trace(mVcdFile, pre_in_V_data_V_0_has_vld_data_reg_i, "pre_in_V_data_V_0_has_vld_data_reg_i");
    sc_trace(mVcdFile, pre_in_V_data_V_0_has_vld_data_reg, "pre_in_V_data_V_0_has_vld_data_reg");
    sc_trace(mVcdFile, post_in_V_user_V_0_data_out, "post_in_V_user_V_0_data_out");
    sc_trace(mVcdFile, post_in_V_user_V_0_vld_in, "post_in_V_user_V_0_vld_in");
    sc_trace(mVcdFile, post_in_V_user_V_0_vld_out, "post_in_V_user_V_0_vld_out");
    sc_trace(mVcdFile, post_in_V_user_V_0_ack_out, "post_in_V_user_V_0_ack_out");
    sc_trace(mVcdFile, post_in_V_user_V_0_data_reg, "post_in_V_user_V_0_data_reg");
    sc_trace(mVcdFile, post_in_V_user_V_0_areset_d, "post_in_V_user_V_0_areset_d");
    sc_trace(mVcdFile, post_in_V_user_V_0_in_rdy, "post_in_V_user_V_0_in_rdy");
    sc_trace(mVcdFile, post_in_V_user_V_0_has_vld_data_reg_i, "post_in_V_user_V_0_has_vld_data_reg_i");
    sc_trace(mVcdFile, post_in_V_user_V_0_has_vld_data_reg, "post_in_V_user_V_0_has_vld_data_reg");
    sc_trace(mVcdFile, post_in_V_last_0_data_out, "post_in_V_last_0_data_out");
    sc_trace(mVcdFile, post_in_V_last_0_vld_in, "post_in_V_last_0_vld_in");
    sc_trace(mVcdFile, post_in_V_last_0_vld_out, "post_in_V_last_0_vld_out");
    sc_trace(mVcdFile, post_in_V_last_0_ack_out, "post_in_V_last_0_ack_out");
    sc_trace(mVcdFile, post_in_V_last_0_data_reg, "post_in_V_last_0_data_reg");
    sc_trace(mVcdFile, post_in_V_last_0_areset_d, "post_in_V_last_0_areset_d");
    sc_trace(mVcdFile, post_in_V_last_0_in_rdy, "post_in_V_last_0_in_rdy");
    sc_trace(mVcdFile, post_in_V_last_0_has_vld_data_reg_i, "post_in_V_last_0_has_vld_data_reg_i");
    sc_trace(mVcdFile, post_in_V_last_0_has_vld_data_reg, "post_in_V_last_0_has_vld_data_reg");
    sc_trace(mVcdFile, post_in_V_id_V_0_data_out, "post_in_V_id_V_0_data_out");
    sc_trace(mVcdFile, post_in_V_id_V_0_vld_in, "post_in_V_id_V_0_vld_in");
    sc_trace(mVcdFile, post_in_V_id_V_0_vld_out, "post_in_V_id_V_0_vld_out");
    sc_trace(mVcdFile, post_in_V_id_V_0_ack_out, "post_in_V_id_V_0_ack_out");
    sc_trace(mVcdFile, post_in_V_id_V_0_data_reg, "post_in_V_id_V_0_data_reg");
    sc_trace(mVcdFile, post_in_V_id_V_0_areset_d, "post_in_V_id_V_0_areset_d");
    sc_trace(mVcdFile, post_in_V_id_V_0_in_rdy, "post_in_V_id_V_0_in_rdy");
    sc_trace(mVcdFile, post_in_V_id_V_0_has_vld_data_reg_i, "post_in_V_id_V_0_has_vld_data_reg_i");
    sc_trace(mVcdFile, post_in_V_id_V_0_has_vld_data_reg, "post_in_V_id_V_0_has_vld_data_reg");
    sc_trace(mVcdFile, post_in_V_data_V_0_data_out, "post_in_V_data_V_0_data_out");
    sc_trace(mVcdFile, post_in_V_data_V_0_vld_in, "post_in_V_data_V_0_vld_in");
    sc_trace(mVcdFile, post_in_V_data_V_0_vld_out, "post_in_V_data_V_0_vld_out");
    sc_trace(mVcdFile, post_in_V_data_V_0_ack_out, "post_in_V_data_V_0_ack_out");
    sc_trace(mVcdFile, post_in_V_data_V_0_data_reg, "post_in_V_data_V_0_data_reg");
    sc_trace(mVcdFile, post_in_V_data_V_0_areset_d, "post_in_V_data_V_0_areset_d");
    sc_trace(mVcdFile, post_in_V_data_V_0_in_rdy, "post_in_V_data_V_0_in_rdy");
    sc_trace(mVcdFile, post_in_V_data_V_0_has_vld_data_reg_i, "post_in_V_data_V_0_has_vld_data_reg_i");
    sc_trace(mVcdFile, post_in_V_data_V_0_has_vld_data_reg, "post_in_V_data_V_0_has_vld_data_reg");
    sc_trace(mVcdFile, time_stamp_V_0_data_out, "time_stamp_V_0_data_out");
    sc_trace(mVcdFile, time_stamp_V_0_vld_in, "time_stamp_V_0_vld_in");
    sc_trace(mVcdFile, time_stamp_V_0_vld_out, "time_stamp_V_0_vld_out");
    sc_trace(mVcdFile, time_stamp_V_0_ack_out, "time_stamp_V_0_ack_out");
    sc_trace(mVcdFile, time_stamp_V_0_data_reg, "time_stamp_V_0_data_reg");
    sc_trace(mVcdFile, time_stamp_V_0_areset_d, "time_stamp_V_0_areset_d");
    sc_trace(mVcdFile, time_stamp_V_0_in_rdy, "time_stamp_V_0_in_rdy");
    sc_trace(mVcdFile, time_stamp_V_0_has_vld_data_reg_i, "time_stamp_V_0_has_vld_data_reg_i");
    sc_trace(mVcdFile, time_stamp_V_0_has_vld_data_reg, "time_stamp_V_0_has_vld_data_reg");
    sc_trace(mVcdFile, spk_V_address0, "spk_V_address0");
    sc_trace(mVcdFile, spk_V_ce0, "spk_V_ce0");
    sc_trace(mVcdFile, spk_V_we0, "spk_V_we0");
    sc_trace(mVcdFile, spk_V_d0, "spk_V_d0");
    sc_trace(mVcdFile, spk_V_q0, "spk_V_q0");
    sc_trace(mVcdFile, pre_in_TDATA_blk_n, "pre_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_353, "ap_sig_353");
    sc_trace(mVcdFile, grp_nbreadreq_fu_78_p6, "grp_nbreadreq_fu_78_p6");
    sc_trace(mVcdFile, post_in_TDATA_blk_n, "post_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_366, "ap_sig_366");
    sc_trace(mVcdFile, grp_nbreadreq_fu_104_p6, "grp_nbreadreq_fu_104_p6");
    sc_trace(mVcdFile, time_stamp_V_TDATA_blk_n, "time_stamp_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_378, "ap_sig_378");
    sc_trace(mVcdFile, spk_out_stream_TDATA_blk_n, "spk_out_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_11, "ap_sig_cseq_ST_pp0_stg0_fsm_11");
    sc_trace(mVcdFile, ap_sig_390, "ap_sig_390");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, val_assign1_reg_181, "val_assign1_reg_181");
    sc_trace(mVcdFile, tmp_reg_289, "tmp_reg_289");
    sc_trace(mVcdFile, ap_sig_402, "ap_sig_402");
    sc_trace(mVcdFile, empty_reg_293_0, "empty_reg_293_0");
    sc_trace(mVcdFile, empty_reg_293_2, "empty_reg_293_2");
    sc_trace(mVcdFile, empty_reg_293_3, "empty_reg_293_3");
    sc_trace(mVcdFile, tmp_user_V_reg_300, "tmp_user_V_reg_300");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_423, "ap_sig_423");
    sc_trace(mVcdFile, tmp_data_V_reg_305, "tmp_data_V_reg_305");
    sc_trace(mVcdFile, grp_fu_281_p3, "grp_fu_281_p3");
    sc_trace(mVcdFile, tmp_s_reg_315, "tmp_s_reg_315");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_436, "ap_sig_436");
    sc_trace(mVcdFile, ap_sig_441, "ap_sig_441");
    sc_trace(mVcdFile, empty_2_reg_324_0, "empty_2_reg_324_0");
    sc_trace(mVcdFile, empty_2_reg_324_1, "empty_2_reg_324_1");
    sc_trace(mVcdFile, empty_2_reg_324_2, "empty_2_reg_324_2");
    sc_trace(mVcdFile, empty_2_reg_324_3, "empty_2_reg_324_3");
    sc_trace(mVcdFile, tmp_id_V_reg_332, "tmp_id_V_reg_332");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_462, "ap_sig_462");
    sc_trace(mVcdFile, grp_fu_220_p2, "grp_fu_220_p2");
    sc_trace(mVcdFile, tmp_2_reg_342, "tmp_2_reg_342");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_473, "ap_sig_473");
    sc_trace(mVcdFile, ap_sig_478, "ap_sig_478");
    sc_trace(mVcdFile, tmp_6_reg_352, "tmp_6_reg_352");
    sc_trace(mVcdFile, ap_sig_ioackin_spk_out_stream_TREADY, "ap_sig_ioackin_spk_out_stream_TREADY");
    sc_trace(mVcdFile, j_fu_264_p2, "j_fu_264_p2");
    sc_trace(mVcdFile, j_reg_362, "j_reg_362");
    sc_trace(mVcdFile, exitcond_fu_270_p2, "exitcond_fu_270_p2");
    sc_trace(mVcdFile, exitcond_reg_367, "exitcond_reg_367");
    sc_trace(mVcdFile, val_assign1_phi_fu_185_p4, "val_assign1_phi_fu_185_p4");
    sc_trace(mVcdFile, tmp_10_cast_fu_209_p1, "tmp_10_cast_fu_209_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_513, "ap_sig_513");
    sc_trace(mVcdFile, tmp_12_cast_fu_245_p1, "tmp_12_cast_fu_245_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_259_p1, "tmp_13_cast_fu_259_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_spk_out_stream_TREADY, "ap_reg_ioackin_spk_out_stream_TREADY");
    sc_trace(mVcdFile, grp_fu_220_p0, "grp_fu_220_p0");
    sc_trace(mVcdFile, grp_fu_220_p1, "grp_fu_220_p1");
    sc_trace(mVcdFile, tmp_6_cast_fu_236_p1, "tmp_6_cast_fu_236_p1");
    sc_trace(mVcdFile, tmp_3_fu_240_p2, "tmp_3_fu_240_p2");
    sc_trace(mVcdFile, tmp_9_cast_fu_250_p1, "tmp_9_cast_fu_250_p1");
    sc_trace(mVcdFile, tmp_4_fu_254_p2, "tmp_4_fu_254_p2");
    sc_trace(mVcdFile, grp_fu_281_p0, "grp_fu_281_p0");
    sc_trace(mVcdFile, grp_fu_281_p1, "grp_fu_281_p1");
    sc_trace(mVcdFile, grp_fu_281_p2, "grp_fu_281_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st14_fsm_12, "ap_sig_cseq_ST_st14_fsm_12");
    sc_trace(mVcdFile, ap_sig_628, "ap_sig_628");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_220_p00, "grp_fu_220_p00");
    sc_trace(mVcdFile, grp_fu_281_p00, "grp_fu_281_p00");
    sc_trace(mVcdFile, grp_fu_281_p20, "grp_fu_281_p20");
#endif

    }
    mHdltvinHandle.open("spk_packet_rx.hdltvin.dat");
    mHdltvoutHandle.open("spk_packet_rx.hdltvout.dat");
}

spk_packet_rx::~spk_packet_rx() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete spk_V_U;
    delete spk_packet_rx_mul_6ns_6ns_11_3_U1;
    delete spk_packet_rx_mac_muladd_6ns_6ns_5ns_11_3_U2;
}

void spk_packet_rx::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void spk_packet_rx::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_spk_out_stream_TREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_out_stream_TREADY.read()))))) {
            ap_reg_ioackin_spk_out_stream_TREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, spk_out_stream_TREADY.read())))) {
            ap_reg_ioackin_spk_out_stream_TREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_out_stream_TREADY.read())) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_270_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, empty_2_reg_324_1.read()) && 
                    !ap_sig_478.read())) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_out_stream_TREADY.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_reg_ppiten_pp0_it0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, empty_2_reg_324_1.read()) && 
                    !ap_sig_478.read())) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        post_in_V_data_V_0_has_vld_data_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            post_in_V_data_V_0_has_vld_data_reg = post_in_V_data_V_0_has_vld_data_reg_i.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        post_in_V_data_V_0_in_rdy = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            post_in_V_data_V_0_in_rdy = (post_in_V_data_V_0_ack_out.read() | ~post_in_V_data_V_0_has_vld_data_reg_i.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        post_in_V_id_V_0_has_vld_data_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            post_in_V_id_V_0_has_vld_data_reg = post_in_V_id_V_0_has_vld_data_reg_i.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        post_in_V_id_V_0_in_rdy = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            post_in_V_id_V_0_in_rdy = (post_in_V_id_V_0_ack_out.read() | ~post_in_V_id_V_0_has_vld_data_reg_i.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        post_in_V_last_0_has_vld_data_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            post_in_V_last_0_has_vld_data_reg = post_in_V_last_0_has_vld_data_reg_i.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        post_in_V_last_0_in_rdy = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            post_in_V_last_0_in_rdy = (post_in_V_last_0_ack_out.read() | ~post_in_V_last_0_has_vld_data_reg_i.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        post_in_V_user_V_0_has_vld_data_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            post_in_V_user_V_0_has_vld_data_reg = post_in_V_user_V_0_has_vld_data_reg_i.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        post_in_V_user_V_0_in_rdy = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            post_in_V_user_V_0_in_rdy = (post_in_V_user_V_0_ack_out.read() | ~post_in_V_user_V_0_has_vld_data_reg_i.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        pre_in_V_data_V_0_has_vld_data_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            pre_in_V_data_V_0_has_vld_data_reg = pre_in_V_data_V_0_has_vld_data_reg_i.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        pre_in_V_data_V_0_in_rdy = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            pre_in_V_data_V_0_in_rdy = (pre_in_V_data_V_0_ack_out.read() | ~pre_in_V_data_V_0_has_vld_data_reg_i.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        pre_in_V_id_V_0_has_vld_data_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            pre_in_V_id_V_0_has_vld_data_reg = pre_in_V_id_V_0_has_vld_data_reg_i.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        pre_in_V_id_V_0_in_rdy = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            pre_in_V_id_V_0_in_rdy = (pre_in_V_id_V_0_ack_out.read() | ~pre_in_V_id_V_0_has_vld_data_reg_i.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        pre_in_V_last_0_has_vld_data_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            pre_in_V_last_0_has_vld_data_reg = pre_in_V_last_0_has_vld_data_reg_i.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        pre_in_V_last_0_in_rdy = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            pre_in_V_last_0_in_rdy = (pre_in_V_last_0_ack_out.read() | ~pre_in_V_last_0_has_vld_data_reg_i.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        pre_in_V_user_V_0_has_vld_data_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            pre_in_V_user_V_0_has_vld_data_reg = pre_in_V_user_V_0_has_vld_data_reg_i.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        pre_in_V_user_V_0_in_rdy = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            pre_in_V_user_V_0_in_rdy = (pre_in_V_user_V_0_ack_out.read() | ~pre_in_V_user_V_0_has_vld_data_reg_i.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        time_stamp_V_0_has_vld_data_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            time_stamp_V_0_has_vld_data_reg = time_stamp_V_0_has_vld_data_reg_i.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        time_stamp_V_0_in_rdy = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            time_stamp_V_0_in_rdy = (time_stamp_V_0_ack_out.read() | ~time_stamp_V_0_has_vld_data_reg_i.read());
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_out_stream_TREADY.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_367.read()))) {
        val_assign1_reg_181 = j_reg_362.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, empty_2_reg_324_1.read()) && 
                !ap_sig_478.read())) {
        val_assign1_reg_181 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_104_p6.read()) && !ap_sig_441.read())) {
        empty_2_reg_324_0 = post_in_V_user_V_0_data_out.read();
        empty_2_reg_324_1 =  (sc_lv<1>) (post_in_V_last_0_data_out.read());
        empty_2_reg_324_2 = post_in_V_id_V_0_data_out.read();
        empty_2_reg_324_3 = post_in_V_data_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(grp_nbreadreq_fu_78_p6.read(), ap_const_lv1_0) && !ap_sig_402.read())) {
        empty_reg_293_0 = pre_in_V_user_V_0_data_out.read();
        empty_reg_293_2 = pre_in_V_id_V_0_data_out.read();
        empty_reg_293_3 = pre_in_V_data_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_out_stream_TREADY.read())))) {
        exitcond_reg_367 = exitcond_fu_270_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_out_stream_TREADY.read())))) {
        j_reg_362 = j_fu_264_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_true, ap_true)) {
        post_in_V_data_V_0_areset_d = ap_rst_n_inv.read();
        post_in_V_id_V_0_areset_d = ap_rst_n_inv.read();
        post_in_V_last_0_areset_d = ap_rst_n_inv.read();
        post_in_V_user_V_0_areset_d = ap_rst_n_inv.read();
        pre_in_V_data_V_0_areset_d = ap_rst_n_inv.read();
        pre_in_V_id_V_0_areset_d = ap_rst_n_inv.read();
        pre_in_V_last_0_areset_d = ap_rst_n_inv.read();
        pre_in_V_user_V_0_areset_d = ap_rst_n_inv.read();
        time_stamp_V_0_areset_d = ap_rst_n_inv.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_data_V_0_in_rdy.read()))) {
        post_in_V_data_V_0_data_reg = post_in_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_id_V_0_in_rdy.read()))) {
        post_in_V_id_V_0_data_reg = post_in_TID.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_last_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_last_0_in_rdy.read()))) {
        post_in_V_last_0_data_reg = post_in_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_user_V_0_in_rdy.read()))) {
        post_in_V_user_V_0_data_reg = post_in_TUSER.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_data_V_0_in_rdy.read()))) {
        pre_in_V_data_V_0_data_reg = pre_in_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_id_V_0_in_rdy.read()))) {
        pre_in_V_id_V_0_data_reg = pre_in_TID.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_user_V_0_in_rdy.read()))) {
        pre_in_V_user_V_0_data_reg = pre_in_TUSER.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, time_stamp_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, time_stamp_V_0_in_rdy.read()))) {
        time_stamp_V_0_data_reg = time_stamp_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        tmp_2_reg_342 = grp_fu_220_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, empty_2_reg_324_1.read()) && !ap_sig_478.read())) {
        tmp_6_reg_352 = time_stamp_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        tmp_data_V_reg_305 = empty_reg_293_3.read();
        tmp_user_V_reg_300 = empty_reg_293_0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        tmp_id_V_reg_332 = empty_2_reg_324_2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !ap_sig_402.read())) {
        tmp_reg_289 = grp_nbreadreq_fu_78_p6.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        tmp_s_reg_315 = grp_fu_281_p3.read();
    }
}

void spk_packet_rx::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_12.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_12.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void spk_packet_rx::thread_ap_sig_30() {
    ap_sig_30 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void spk_packet_rx::thread_ap_sig_353() {
    ap_sig_353 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void spk_packet_rx::thread_ap_sig_366() {
    ap_sig_366 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void spk_packet_rx::thread_ap_sig_378() {
    ap_sig_378 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void spk_packet_rx::thread_ap_sig_390() {
    ap_sig_390 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void spk_packet_rx::thread_ap_sig_402() {
    ap_sig_402 = (!esl_seteq<1,1,1>(grp_nbreadreq_fu_78_p6.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(pre_in_V_user_V_0_vld_out.read(), ap_const_logic_0));
}

void spk_packet_rx::thread_ap_sig_423() {
    ap_sig_423 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void spk_packet_rx::thread_ap_sig_436() {
    ap_sig_436 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void spk_packet_rx::thread_ap_sig_441() {
    ap_sig_441 = (!esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_104_p6.read()) && esl_seteq<1,1,1>(post_in_V_user_V_0_vld_out.read(), ap_const_logic_0));
}

void spk_packet_rx::thread_ap_sig_462() {
    ap_sig_462 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void spk_packet_rx::thread_ap_sig_473() {
    ap_sig_473 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void spk_packet_rx::thread_ap_sig_478() {
    ap_sig_478 = (!esl_seteq<1,1,1>(ap_const_lv1_0, empty_2_reg_324_1.read()) && esl_seteq<1,1,1>(time_stamp_V_0_vld_out.read(), ap_const_logic_0));
}

void spk_packet_rx::thread_ap_sig_513() {
    ap_sig_513 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void spk_packet_rx::thread_ap_sig_628() {
    ap_sig_628 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void spk_packet_rx::thread_ap_sig_cseq_ST_pp0_stg0_fsm_11() {
    if (ap_sig_390.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_11 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_473.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_378.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_sig_cseq_ST_st14_fsm_12() {
    if (ap_sig_628.read()) {
        ap_sig_cseq_ST_st14_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st14_fsm_12 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_30.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_353.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_423.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_436.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_513.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_366.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_462.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_ap_sig_ioackin_spk_out_stream_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_spk_out_stream_TREADY.read())) {
        ap_sig_ioackin_spk_out_stream_TREADY = spk_out_stream_TREADY.read();
    } else {
        ap_sig_ioackin_spk_out_stream_TREADY = ap_const_logic_1;
    }
}

void spk_packet_rx::thread_exitcond_fu_270_p2() {
    exitcond_fu_270_p2 = (!val_assign1_phi_fu_185_p4.read().is_01() || !ap_const_lv5_12.is_01())? sc_lv<1>(): sc_lv<1>(val_assign1_phi_fu_185_p4.read() == ap_const_lv5_12);
}

void spk_packet_rx::thread_grp_fu_220_p0() {
    grp_fu_220_p0 =  (sc_lv<6>) (grp_fu_220_p00.read());
}

void spk_packet_rx::thread_grp_fu_220_p00() {
    grp_fu_220_p00 = esl_zext<11,6>(empty_2_reg_324_2.read());
}

void spk_packet_rx::thread_grp_fu_220_p1() {
    grp_fu_220_p1 =  (sc_lv<6>) (ap_const_lv11_13);
}

void spk_packet_rx::thread_grp_fu_281_p0() {
    grp_fu_281_p0 =  (sc_lv<6>) (grp_fu_281_p00.read());
}

void spk_packet_rx::thread_grp_fu_281_p00() {
    grp_fu_281_p00 = esl_zext<11,6>(empty_reg_293_2.read());
}

void spk_packet_rx::thread_grp_fu_281_p1() {
    grp_fu_281_p1 =  (sc_lv<6>) (ap_const_lv11_13);
}

void spk_packet_rx::thread_grp_fu_281_p2() {
    grp_fu_281_p2 =  (sc_lv<5>) (grp_fu_281_p20.read());
}

void spk_packet_rx::thread_grp_fu_281_p20() {
    grp_fu_281_p20 = esl_zext<11,5>(tmp_user_V_reg_300.read());
}

void spk_packet_rx::thread_grp_nbreadreq_fu_104_p6() {
    grp_nbreadreq_fu_104_p6 =  (sc_lv<1>) ((post_in_V_user_V_0_vld_out.read() & post_in_V_last_0_vld_out.read() & post_in_V_id_V_0_vld_out.read() & post_in_V_data_V_0_vld_out.read()));
}

void spk_packet_rx::thread_grp_nbreadreq_fu_78_p6() {
    grp_nbreadreq_fu_78_p6 =  (sc_lv<1>) ((pre_in_V_user_V_0_vld_out.read() & pre_in_V_last_0_vld_out.read() & pre_in_V_id_V_0_vld_out.read() & pre_in_V_data_V_0_vld_out.read()));
}

void spk_packet_rx::thread_j_fu_264_p2() {
    j_fu_264_p2 = (!val_assign1_phi_fu_185_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(val_assign1_phi_fu_185_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void spk_packet_rx::thread_post_in_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_104_p6.read()))) {
        post_in_TDATA_blk_n = post_in_V_data_V_0_vld_out.read();
    } else {
        post_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void spk_packet_rx::thread_post_in_TREADY() {
    post_in_TREADY = post_in_V_data_V_0_in_rdy.read();
}

void spk_packet_rx::thread_post_in_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_104_p6.read()) && 
         !ap_sig_441.read())) {
        post_in_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        post_in_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_post_in_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_data_V_0_has_vld_data_reg.read())) {
        post_in_V_data_V_0_data_out = post_in_V_data_V_0_data_reg.read();
    } else {
        post_in_V_data_V_0_data_out = post_in_TDATA.read();
    }
}

void spk_packet_rx::thread_post_in_V_data_V_0_has_vld_data_reg_i() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_data_V_0_vld_in.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, post_in_V_data_V_0_ack_out.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_data_V_0_in_rdy.read()))) {
        post_in_V_data_V_0_has_vld_data_reg_i = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_data_V_0_ack_out.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_data_V_0_has_vld_data_reg.read()) && 
                (esl_seteq<1,1,1>(ap_const_logic_0, post_in_V_data_V_0_vld_in.read()) || 
                 esl_seteq<1,1,1>(ap_const_logic_0, post_in_V_data_V_0_in_rdy.read())))) {
        post_in_V_data_V_0_has_vld_data_reg_i = ap_const_logic_0;
    } else {
        post_in_V_data_V_0_has_vld_data_reg_i = post_in_V_data_V_0_has_vld_data_reg.read();
    }
}

void spk_packet_rx::thread_post_in_V_data_V_0_vld_in() {
    post_in_V_data_V_0_vld_in = post_in_TVALID.read();
}

void spk_packet_rx::thread_post_in_V_data_V_0_vld_out() {
    post_in_V_data_V_0_vld_out = ((post_in_TVALID.read() | 
  post_in_V_data_V_0_has_vld_data_reg.read()) & ~post_in_V_data_V_0_areset_d.read());
}

void spk_packet_rx::thread_post_in_V_id_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_104_p6.read()) && 
         !ap_sig_441.read())) {
        post_in_V_id_V_0_ack_out = ap_const_logic_1;
    } else {
        post_in_V_id_V_0_ack_out = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_post_in_V_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_id_V_0_has_vld_data_reg.read())) {
        post_in_V_id_V_0_data_out = post_in_V_id_V_0_data_reg.read();
    } else {
        post_in_V_id_V_0_data_out = post_in_TID.read();
    }
}

void spk_packet_rx::thread_post_in_V_id_V_0_has_vld_data_reg_i() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_id_V_0_vld_in.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, post_in_V_id_V_0_ack_out.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_id_V_0_in_rdy.read()))) {
        post_in_V_id_V_0_has_vld_data_reg_i = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_id_V_0_ack_out.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_id_V_0_has_vld_data_reg.read()) && 
                (esl_seteq<1,1,1>(ap_const_logic_0, post_in_V_id_V_0_vld_in.read()) || 
                 esl_seteq<1,1,1>(ap_const_logic_0, post_in_V_id_V_0_in_rdy.read())))) {
        post_in_V_id_V_0_has_vld_data_reg_i = ap_const_logic_0;
    } else {
        post_in_V_id_V_0_has_vld_data_reg_i = post_in_V_id_V_0_has_vld_data_reg.read();
    }
}

void spk_packet_rx::thread_post_in_V_id_V_0_vld_in() {
    post_in_V_id_V_0_vld_in = post_in_TVALID.read();
}

void spk_packet_rx::thread_post_in_V_id_V_0_vld_out() {
    post_in_V_id_V_0_vld_out = ((post_in_TVALID.read() | 
  post_in_V_id_V_0_has_vld_data_reg.read()) & ~post_in_V_id_V_0_areset_d.read());
}

void spk_packet_rx::thread_post_in_V_last_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_104_p6.read()) && 
         !ap_sig_441.read())) {
        post_in_V_last_0_ack_out = ap_const_logic_1;
    } else {
        post_in_V_last_0_ack_out = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_post_in_V_last_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_last_0_has_vld_data_reg.read())) {
        post_in_V_last_0_data_out = post_in_V_last_0_data_reg.read();
    } else {
        post_in_V_last_0_data_out = post_in_TLAST.read();
    }
}

void spk_packet_rx::thread_post_in_V_last_0_has_vld_data_reg_i() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_last_0_vld_in.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, post_in_V_last_0_ack_out.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_last_0_in_rdy.read()))) {
        post_in_V_last_0_has_vld_data_reg_i = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_last_0_ack_out.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_last_0_has_vld_data_reg.read()) && 
                (esl_seteq<1,1,1>(ap_const_logic_0, post_in_V_last_0_vld_in.read()) || 
                 esl_seteq<1,1,1>(ap_const_logic_0, post_in_V_last_0_in_rdy.read())))) {
        post_in_V_last_0_has_vld_data_reg_i = ap_const_logic_0;
    } else {
        post_in_V_last_0_has_vld_data_reg_i = post_in_V_last_0_has_vld_data_reg.read();
    }
}

void spk_packet_rx::thread_post_in_V_last_0_vld_in() {
    post_in_V_last_0_vld_in = post_in_TVALID.read();
}

void spk_packet_rx::thread_post_in_V_last_0_vld_out() {
    post_in_V_last_0_vld_out = ((post_in_TVALID.read() | 
  post_in_V_last_0_has_vld_data_reg.read()) & ~post_in_V_last_0_areset_d.read());
}

void spk_packet_rx::thread_post_in_V_user_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_104_p6.read()) && 
         !ap_sig_441.read())) {
        post_in_V_user_V_0_ack_out = ap_const_logic_1;
    } else {
        post_in_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_post_in_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_user_V_0_has_vld_data_reg.read())) {
        post_in_V_user_V_0_data_out = post_in_V_user_V_0_data_reg.read();
    } else {
        post_in_V_user_V_0_data_out = post_in_TUSER.read();
    }
}

void spk_packet_rx::thread_post_in_V_user_V_0_has_vld_data_reg_i() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_user_V_0_vld_in.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, post_in_V_user_V_0_ack_out.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_user_V_0_in_rdy.read()))) {
        post_in_V_user_V_0_has_vld_data_reg_i = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_user_V_0_ack_out.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, post_in_V_user_V_0_has_vld_data_reg.read()) && 
                (esl_seteq<1,1,1>(ap_const_logic_0, post_in_V_user_V_0_vld_in.read()) || 
                 esl_seteq<1,1,1>(ap_const_logic_0, post_in_V_user_V_0_in_rdy.read())))) {
        post_in_V_user_V_0_has_vld_data_reg_i = ap_const_logic_0;
    } else {
        post_in_V_user_V_0_has_vld_data_reg_i = post_in_V_user_V_0_has_vld_data_reg.read();
    }
}

void spk_packet_rx::thread_post_in_V_user_V_0_vld_in() {
    post_in_V_user_V_0_vld_in = post_in_TVALID.read();
}

void spk_packet_rx::thread_post_in_V_user_V_0_vld_out() {
    post_in_V_user_V_0_vld_out = ((post_in_TVALID.read() | 
  post_in_V_user_V_0_has_vld_data_reg.read()) & ~post_in_V_user_V_0_areset_d.read());
}

void spk_packet_rx::thread_pre_in_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(grp_nbreadreq_fu_78_p6.read(), ap_const_lv1_0))) {
        pre_in_TDATA_blk_n = pre_in_V_data_V_0_vld_out.read();
    } else {
        pre_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void spk_packet_rx::thread_pre_in_TREADY() {
    pre_in_TREADY = pre_in_V_data_V_0_in_rdy.read();
}

void spk_packet_rx::thread_pre_in_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(grp_nbreadreq_fu_78_p6.read(), ap_const_lv1_0) && 
         !ap_sig_402.read())) {
        pre_in_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        pre_in_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_pre_in_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_data_V_0_has_vld_data_reg.read())) {
        pre_in_V_data_V_0_data_out = pre_in_V_data_V_0_data_reg.read();
    } else {
        pre_in_V_data_V_0_data_out = pre_in_TDATA.read();
    }
}

void spk_packet_rx::thread_pre_in_V_data_V_0_has_vld_data_reg_i() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_data_V_0_vld_in.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, pre_in_V_data_V_0_ack_out.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_data_V_0_in_rdy.read()))) {
        pre_in_V_data_V_0_has_vld_data_reg_i = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_data_V_0_ack_out.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_data_V_0_has_vld_data_reg.read()) && 
                (esl_seteq<1,1,1>(ap_const_logic_0, pre_in_V_data_V_0_vld_in.read()) || 
                 esl_seteq<1,1,1>(ap_const_logic_0, pre_in_V_data_V_0_in_rdy.read())))) {
        pre_in_V_data_V_0_has_vld_data_reg_i = ap_const_logic_0;
    } else {
        pre_in_V_data_V_0_has_vld_data_reg_i = pre_in_V_data_V_0_has_vld_data_reg.read();
    }
}

void spk_packet_rx::thread_pre_in_V_data_V_0_vld_in() {
    pre_in_V_data_V_0_vld_in = pre_in_TVALID.read();
}

void spk_packet_rx::thread_pre_in_V_data_V_0_vld_out() {
    pre_in_V_data_V_0_vld_out = ((pre_in_TVALID.read() | 
  pre_in_V_data_V_0_has_vld_data_reg.read()) & ~pre_in_V_data_V_0_areset_d.read());
}

void spk_packet_rx::thread_pre_in_V_id_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(grp_nbreadreq_fu_78_p6.read(), ap_const_lv1_0) && 
         !ap_sig_402.read())) {
        pre_in_V_id_V_0_ack_out = ap_const_logic_1;
    } else {
        pre_in_V_id_V_0_ack_out = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_pre_in_V_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_id_V_0_has_vld_data_reg.read())) {
        pre_in_V_id_V_0_data_out = pre_in_V_id_V_0_data_reg.read();
    } else {
        pre_in_V_id_V_0_data_out = pre_in_TID.read();
    }
}

void spk_packet_rx::thread_pre_in_V_id_V_0_has_vld_data_reg_i() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_id_V_0_vld_in.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, pre_in_V_id_V_0_ack_out.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_id_V_0_in_rdy.read()))) {
        pre_in_V_id_V_0_has_vld_data_reg_i = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_id_V_0_ack_out.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_id_V_0_has_vld_data_reg.read()) && 
                (esl_seteq<1,1,1>(ap_const_logic_0, pre_in_V_id_V_0_vld_in.read()) || 
                 esl_seteq<1,1,1>(ap_const_logic_0, pre_in_V_id_V_0_in_rdy.read())))) {
        pre_in_V_id_V_0_has_vld_data_reg_i = ap_const_logic_0;
    } else {
        pre_in_V_id_V_0_has_vld_data_reg_i = pre_in_V_id_V_0_has_vld_data_reg.read();
    }
}

void spk_packet_rx::thread_pre_in_V_id_V_0_vld_in() {
    pre_in_V_id_V_0_vld_in = pre_in_TVALID.read();
}

void spk_packet_rx::thread_pre_in_V_id_V_0_vld_out() {
    pre_in_V_id_V_0_vld_out = ((pre_in_TVALID.read() | 
  pre_in_V_id_V_0_has_vld_data_reg.read()) & ~pre_in_V_id_V_0_areset_d.read());
}

void spk_packet_rx::thread_pre_in_V_last_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(grp_nbreadreq_fu_78_p6.read(), ap_const_lv1_0) && 
         !ap_sig_402.read())) {
        pre_in_V_last_0_ack_out = ap_const_logic_1;
    } else {
        pre_in_V_last_0_ack_out = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_pre_in_V_last_0_has_vld_data_reg_i() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_last_0_vld_in.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, pre_in_V_last_0_ack_out.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_last_0_in_rdy.read()))) {
        pre_in_V_last_0_has_vld_data_reg_i = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_last_0_ack_out.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_last_0_has_vld_data_reg.read()) && 
                (esl_seteq<1,1,1>(ap_const_logic_0, pre_in_V_last_0_vld_in.read()) || 
                 esl_seteq<1,1,1>(ap_const_logic_0, pre_in_V_last_0_in_rdy.read())))) {
        pre_in_V_last_0_has_vld_data_reg_i = ap_const_logic_0;
    } else {
        pre_in_V_last_0_has_vld_data_reg_i = pre_in_V_last_0_has_vld_data_reg.read();
    }
}

void spk_packet_rx::thread_pre_in_V_last_0_vld_in() {
    pre_in_V_last_0_vld_in = pre_in_TVALID.read();
}

void spk_packet_rx::thread_pre_in_V_last_0_vld_out() {
    pre_in_V_last_0_vld_out = ((pre_in_TVALID.read() | 
  pre_in_V_last_0_has_vld_data_reg.read()) & ~pre_in_V_last_0_areset_d.read());
}

void spk_packet_rx::thread_pre_in_V_user_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(grp_nbreadreq_fu_78_p6.read(), ap_const_lv1_0) && 
         !ap_sig_402.read())) {
        pre_in_V_user_V_0_ack_out = ap_const_logic_1;
    } else {
        pre_in_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_pre_in_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_user_V_0_has_vld_data_reg.read())) {
        pre_in_V_user_V_0_data_out = pre_in_V_user_V_0_data_reg.read();
    } else {
        pre_in_V_user_V_0_data_out = pre_in_TUSER.read();
    }
}

void spk_packet_rx::thread_pre_in_V_user_V_0_has_vld_data_reg_i() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_user_V_0_vld_in.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, pre_in_V_user_V_0_ack_out.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_user_V_0_in_rdy.read()))) {
        pre_in_V_user_V_0_has_vld_data_reg_i = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_user_V_0_ack_out.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, pre_in_V_user_V_0_has_vld_data_reg.read()) && 
                (esl_seteq<1,1,1>(ap_const_logic_0, pre_in_V_user_V_0_vld_in.read()) || 
                 esl_seteq<1,1,1>(ap_const_logic_0, pre_in_V_user_V_0_in_rdy.read())))) {
        pre_in_V_user_V_0_has_vld_data_reg_i = ap_const_logic_0;
    } else {
        pre_in_V_user_V_0_has_vld_data_reg_i = pre_in_V_user_V_0_has_vld_data_reg.read();
    }
}

void spk_packet_rx::thread_pre_in_V_user_V_0_vld_in() {
    pre_in_V_user_V_0_vld_in = pre_in_TVALID.read();
}

void spk_packet_rx::thread_pre_in_V_user_V_0_vld_out() {
    pre_in_V_user_V_0_vld_out = ((pre_in_TVALID.read() | 
  pre_in_V_user_V_0_has_vld_data_reg.read()) & ~pre_in_V_user_V_0_areset_d.read());
}

void spk_packet_rx::thread_spk_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        spk_V_address0 =  (sc_lv<10>) (tmp_12_cast_fu_245_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        spk_V_address0 =  (sc_lv<10>) (tmp_10_cast_fu_209_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        spk_V_address0 =  (sc_lv<10>) (tmp_13_cast_fu_259_p1.read());
    } else {
        spk_V_address0 = "XXXXXXXXXX";
    }
}

void spk_packet_rx::thread_spk_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
          !ap_sig_478.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_out_stream_TREADY.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()))) {
        spk_V_ce0 = ap_const_logic_1;
    } else {
        spk_V_ce0 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_spk_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        spk_V_d0 = empty_2_reg_324_3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        spk_V_d0 = tmp_data_V_reg_305.read();
    } else {
        spk_V_d0 =  (sc_lv<96>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void spk_packet_rx::thread_spk_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
          !ap_sig_478.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_289.read())))) {
        spk_V_we0 = ap_const_logic_1;
    } else {
        spk_V_we0 = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_spk_out_stream_TDATA() {
    spk_out_stream_TDATA = spk_V_q0.read();
}

void spk_packet_rx::thread_spk_out_stream_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        spk_out_stream_TDATA_blk_n = spk_out_stream_TREADY.read();
    } else {
        spk_out_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void spk_packet_rx::thread_spk_out_stream_TDEST() {
    spk_out_stream_TDEST = esl_zext<16,5>(val_assign1_reg_181.read());
}

void spk_packet_rx::thread_spk_out_stream_TID() {
    spk_out_stream_TID = tmp_id_V_reg_332.read();
}

void spk_packet_rx::thread_spk_out_stream_TUSER() {
    spk_out_stream_TUSER = tmp_6_reg_352.read();
}

void spk_packet_rx::thread_spk_out_stream_TVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_spk_out_stream_TREADY.read())))) {
        spk_out_stream_TVALID = ap_const_logic_1;
    } else {
        spk_out_stream_TVALID = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_time_stamp_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, empty_2_reg_324_1.read()) && 
         !ap_sig_478.read())) {
        time_stamp_V_0_ack_out = ap_const_logic_1;
    } else {
        time_stamp_V_0_ack_out = ap_const_logic_0;
    }
}

void spk_packet_rx::thread_time_stamp_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, time_stamp_V_0_has_vld_data_reg.read())) {
        time_stamp_V_0_data_out = time_stamp_V_0_data_reg.read();
    } else {
        time_stamp_V_0_data_out = time_stamp_V_TDATA.read();
    }
}

void spk_packet_rx::thread_time_stamp_V_0_has_vld_data_reg_i() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, time_stamp_V_0_vld_in.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, time_stamp_V_0_ack_out.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, time_stamp_V_0_in_rdy.read()))) {
        time_stamp_V_0_has_vld_data_reg_i = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, time_stamp_V_0_ack_out.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, time_stamp_V_0_has_vld_data_reg.read()) && 
                (esl_seteq<1,1,1>(ap_const_logic_0, time_stamp_V_0_vld_in.read()) || 
                 esl_seteq<1,1,1>(ap_const_logic_0, time_stamp_V_0_in_rdy.read())))) {
        time_stamp_V_0_has_vld_data_reg_i = ap_const_logic_0;
    } else {
        time_stamp_V_0_has_vld_data_reg_i = time_stamp_V_0_has_vld_data_reg.read();
    }
}

void spk_packet_rx::thread_time_stamp_V_0_vld_in() {
    time_stamp_V_0_vld_in = time_stamp_V_TVALID.read();
}

void spk_packet_rx::thread_time_stamp_V_0_vld_out() {
    time_stamp_V_0_vld_out = ((time_stamp_V_TVALID.read() | 
  time_stamp_V_0_has_vld_data_reg.read()) & ~time_stamp_V_0_areset_d.read());
}

void spk_packet_rx::thread_time_stamp_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, empty_2_reg_324_1.read()))) {
        time_stamp_V_TDATA_blk_n = time_stamp_V_0_vld_out.read();
    } else {
        time_stamp_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void spk_packet_rx::thread_time_stamp_V_TREADY() {
    time_stamp_V_TREADY = time_stamp_V_0_in_rdy.read();
}

void spk_packet_rx::thread_tmp_10_cast_fu_209_p1() {
    tmp_10_cast_fu_209_p1 = esl_sext<64,11>(tmp_s_reg_315.read());
}

void spk_packet_rx::thread_tmp_12_cast_fu_245_p1() {
    tmp_12_cast_fu_245_p1 = esl_sext<64,11>(tmp_3_fu_240_p2.read());
}

void spk_packet_rx::thread_tmp_13_cast_fu_259_p1() {
    tmp_13_cast_fu_259_p1 = esl_sext<64,11>(tmp_4_fu_254_p2.read());
}

void spk_packet_rx::thread_tmp_3_fu_240_p2() {
    tmp_3_fu_240_p2 = (!tmp_2_reg_342.read().is_01() || !tmp_6_cast_fu_236_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_2_reg_342.read()) + sc_biguint<11>(tmp_6_cast_fu_236_p1.read()));
}

void spk_packet_rx::thread_tmp_4_fu_254_p2() {
    tmp_4_fu_254_p2 = (!tmp_2_reg_342.read().is_01() || !tmp_9_cast_fu_250_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_2_reg_342.read()) + sc_biguint<11>(tmp_9_cast_fu_250_p1.read()));
}

void spk_packet_rx::thread_tmp_6_cast_fu_236_p1() {
    tmp_6_cast_fu_236_p1 = esl_zext<11,5>(empty_2_reg_324_0.read());
}

void spk_packet_rx::thread_tmp_9_cast_fu_250_p1() {
    tmp_9_cast_fu_250_p1 = esl_zext<11,5>(val_assign1_phi_fu_185_p4.read());
}

void spk_packet_rx::thread_val_assign1_phi_fu_185_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_367.read()))) {
        val_assign1_phi_fu_185_p4 = j_reg_362.read();
    } else {
        val_assign1_phi_fu_185_p4 = val_assign1_reg_181.read();
    }
}

void spk_packet_rx::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(grp_nbreadreq_fu_78_p6.read(), ap_const_lv1_0) && !ap_sig_402.read())) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else if ((!esl_seteq<1,1,1>(grp_nbreadreq_fu_78_p6.read(), ap_const_lv1_0) && !ap_sig_402.read())) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_104_p6.read()) && !ap_sig_441.read())) {
                ap_NS_fsm = ap_ST_st14_fsm_12;
            } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_104_p6.read()) && !ap_sig_441.read())) {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, empty_2_reg_324_1.read()) && !ap_sig_478.read())) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_11;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, empty_2_reg_324_1.read()) && !ap_sig_478.read())) {
                ap_NS_fsm = ap_ST_st14_fsm_12;
            } else {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            }
            break;
        case 2048 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_out_stream_TREADY.read())) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_11;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_11.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_out_stream_TREADY.read())) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
                ap_NS_fsm = ap_ST_st14_fsm_12;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_11;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

void spk_packet_rx::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"pre_in_TUSER\" :  \"" << pre_in_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"pre_in_TVALID\" :  \"" << pre_in_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pre_in_TREADY\" :  \"" << pre_in_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"pre_in_TLAST\" :  \"" << pre_in_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"pre_in_TID\" :  \"" << pre_in_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"pre_in_TDATA\" :  \"" << pre_in_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"post_in_TUSER\" :  \"" << post_in_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"post_in_TVALID\" :  \"" << post_in_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"post_in_TREADY\" :  \"" << post_in_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"post_in_TLAST\" :  \"" << post_in_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"post_in_TID\" :  \"" << post_in_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"post_in_TDATA\" :  \"" << post_in_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"time_stamp_V_TDATA\" :  \"" << time_stamp_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"time_stamp_V_TVALID\" :  \"" << time_stamp_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"time_stamp_V_TREADY\" :  \"" << time_stamp_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spk_out_stream_TID\" :  \"" << spk_out_stream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spk_out_stream_TVALID\" :  \"" << spk_out_stream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"spk_out_stream_TREADY\" :  \"" << spk_out_stream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spk_out_stream_TUSER\" :  \"" << spk_out_stream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spk_out_stream_TDATA\" :  \"" << spk_out_stream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spk_out_stream_TDEST\" :  \"" << spk_out_stream_TDEST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

